# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Django application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.11" ]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_SECRET_KEY: test_secret
      DEBUG: "true"
      PG_NAME: ${{ secrets.PG_NAME }}
      PG_USER: ${{ secrets.PG_USER }}
      PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      PG_HOST: ${{ secrets.PG_HOST }}
      PG_PORT: ${{ secrets.PG_PORT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django

      - name: Show requirements.txt
        run: sed -n '1,200p' requirements.txt || true

      - name: Install dependencies (explicit)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install drf-yasg
          python -m pip show drf-yasg || true

      - name: Check drf-yasg import (CI)
        run: |
          python -c "import importlib,sys
          try:
            importlib.import_module('drf_yasg')
            print('drf_yasg import OK')
          except Exception as e:
            print('drf_yasg import FAILED:', e)
            sys.exit(1)"

      - name: Run migrations
        run: |
          python orders/manage.py migrate --noinput

      - name: Run tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov

          pytest orders/backend/tests.py --maxfail=1 --disable-warnings -q \
            --cov=orders/backend --cov-report=xml:coverage.xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false

      - name: Publish coverage to PR
        uses: orgoro/coverage@v3.2
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
